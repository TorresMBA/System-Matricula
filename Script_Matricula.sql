----------------------------------------------------------------------
-- BASE DE DATOS : Matricula
----------------------------------------------------------------------
-- Fecha  : 16-09-19
-- Autor  : Torres Menacho, Brian
----------------------------------------------------------------------
USE MASTER
GO
--
IF EXISTS(SELECT NAME FROM MASTER..sysdatabases where name='Matricula')   	
	DROP DATABASE MATRICULA
GO

CREATE DATABASE MATRICULA
ON PRIMARY(
	NAME = 'Matricula_data',
	FILENAME = 'D:\DB\Matricula_Data.mdf',
	SIZE = 20 MB, 
	MAXSIZE = 50 MB,
	FILEGROWTH = 10%
)LOG ON(
	NAME = 'SysMedic_log',
	FILENAME = 'D:\DB\Matricula_Log.ldf', 
	SIZE = 20 MB,
	FILEGROWTH = 2MB
)
GO
--
USE MATRICULA;
GO
--
-- D I S T R I T OS
--
CREATE TABLE DISTRITO(
ID_DIS INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_DIS VARCHAR(50)
)

INSERT INTO DISTRITO VALUES('Cercado de Lima'),
						('Chorrillos'),
						('San Juan de Miraflores'),
						('San Isidro'),
						('San Borja'),
						('Miraflores'),
						('Barranco'),
						('Angamos')
--
-- P E R S O N A
--
create TABLE PERSONA (
ID_PERSO INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_PERSO VARCHAR(50),
APE_PERSO VARCHAR(50),
TELEFONO VARCHAR(9),
DNI CHAR(9),
EMAIL VARCHAR(70),
SEXO CHAR(1),
FECHA_NAC DATE,
EST_PERSO CHAR(1),
DIRRECION VARCHAR(35),
ID_DIS INT REFERENCES DISTRITO(ID_DIS),
NIVEL VARCHAR(15)
)

INSERT INTO PERSONA VALUES('Brian','Torres', '972101160','72816121','bryan98tm@gmail.com','M','1998-06-29','A','MZ T Lt 1-A',1,'Alumno'),
						  ('Abigail','Neyra','958594223','12345678','GianinaNeyraAL@gmail.com','F','1998-06-09','A','Angamos',7,'Alumno'),
						  ('Jhon','Valverde', '951753852','12345678','jhon98@gmail.com','M','2000-01-20','A','MZ T Lt 1-A',2,'Alumno'),
						  ('Damaris','Camalgo', '995979223','3216547','damaris22@gmail.com','F','1995-07-12','A','MZ T Lt 1-A',3,'Alumno'),
						  ('Karen','Pachon', '987654321','7418222','karen@gmail.com','F','1998-11-01','A','',1,'Alumno'),
						  ('Prur6bas#1','Prubeba!', '123456789','1234567','1234567@gmail.com','M','1998-06-29','A','MZ T Lt 1-A',5,'Alumno'),
						  ('Maestro1','Maestro1', '123456789','1234567','maestro1@gmail.com','M','1998-06-29','A','MZ T Lt 1-A',4,'Maestro'),
						  ('Maestro2','Maestro2', '123456789','1234567','maestro2@gmail.com','M','1800-07-29','A','MZ T Lt 1-A',2,'Maestro'),
						  ('Admin','admin', '987654321','1234567','admin@gmail.com','F','1980-12-20','A','MZ T Lt 1-A',3,'Administrativo')
--
-- A P O D E R A D O
--
CREATE TABLE APODERADO(
ID_APODE INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_APODE VARCHAR(40),
APELLIDO VARCHAR(40),
PARENTEZCO VARCHAR(25),
DNI VARCHAR(8),
FECHA_NAC DATE,
TELF_APOR VARCHAR(9),
EST_CIVIL VARCHAR(25),
DIRRECION VARCHAR(40),
SEXO CHAR(1),
ID_DIS INT
FOREIGN KEY (ID_DIS) REFERENCES DISTRITO(ID_DIS)
)

INSERT INTO APODERADO VALUES('Juan', 'Torres', 'Padre','12345678' , '12-07-1969','995509218','S','AAHH Mateo Pumacahua','M',1),
							(':(', 'Menacho', 'Abuela','12345678', '08-04-1972','995979223','S','AAHH Mateo Pumacahua','M',1),
							('Pablo', 'Escobar', 'Tio','12345678','12-01-1991','123456789','D','AAHH Mateo Pumacahua','M',3),
							('Dionica', 'Valverde', 'Abuela','12345678' ,'11-11-1950','995509218','C','AAHH Mateo Pumacahua','M',5),
							('Juan', 'Torres', 'Padre','12345678', '01-12-1998','972101160','V','AAHH Mateo Pumacahua','M',2),
							('PRactica', 'PRactica', 'Padre','12345678','01-12-1998','972101160','V','AAHH Mateo Pumacahua','M',2)							
--
-- P O S I C I O N -
--
CREATE TABLE POSICION(
ID_POSI INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_POSI VARCHAR(35)
)

INSERT INTO POSICION VALUES('Administrativo'),('Docente'),('Alumno')
--
-- U S U A R I O
--
CREATE TABLE USUARIO(
ID_USU INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_USU VARCHAR(30),
PASS VARCHAR(30),
ID_POSI INT
FOREIGN KEY (ID_POSI) REFERENCES POSICION(ID_POSI) ON DELETE CASCADE
)
SELECT * FROM USUARIO
INSERT INTO USUARIO VALUES('BTORRESM98','123',3),
						 ('ANEYRAF98','123',3),
						 ('JVALVERDE00','123',3),
						 ('DCAMA66LGO95','123',3),
						 ('KPACHON98','123',3),
						 ('PPRUEBA98','123',3),
						 ('Maestro1', '123', 2),
						 ('Maestro2','123',2),
						 ('Admin', '123', 1)
--
-- A L U M N O
--
CREATE TABLE ALUMNO (
ID_ALUM INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_APODE INT,
COD_ALUM VARCHAR(25),
ID_PERSO INT,
ID_CARRERA INT,
ID_USU INT
FOREIGN KEY (ID_APODE) REFERENCES APODERADO(ID_APODE) ON DELETE CASCADE,
FOREIGN KEY (ID_PERSO) REFERENCES PERSONA(ID_PERSO) ON DELETE CASCADE, 
FOREIGN KEY (ID_CARRERA) REFERENCES CARRERA(ID_CARRERA),
FOREIGN KEY (ID_USU) REFERENCES USUARIO(ID_USU)
)
INSERT INTO ALUMNO VALUES(1,'BTORRESM98',1,1,2),
						 (2,'ANEYRAF98',2,2,5),
						 (3,'JVALVERDE00',3,3,1),
						 (4,'DCAMALGO95',4,4,8),
						 (5,'KPACHON98',5,5,4),
						 (6,'PPRUEBA98',6,6,7)
--
-- E M P L E A D O
--
CREATE TABLE EMPLEADO(
ID_EMPLEADO INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
COD_EMPLE VARCHAR(25),
ID_PERSO INT,
SUELDO_BASE FLOAT,
HORAS_TRABAJO TIME,
FOREIGN KEY(ID_PERSO) REFERENCES PERSONA(ID_PERSO) ON DELETE CASCADE
)

INSERT INTO EMPLEADO VALUES('MM198', 6, 930.50, '8:30'),
						   ('MM200', 7, 1200.50, '4:00'),
						   ('AA80', 8, 1350, '8:00')
--
-- A D M I N I S T R A T I V O
--
CREATE TABLE ADMINISTRATIVO(
ID_ADMIN INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_EMPLEADO INT,
CARGO VARCHAR(25),
DEPARTAMENTO VARCHAR(30),
ID_USU INT
FOREIGN KEY (ID_USU) REFERENCES USUARIO(ID_USU) ON DELETE CASCADE,
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE
)

INSERT INTO ADMINISTRATIVO VALUES(3, 'Director Academico', 'Facultad de Ingeneria', 8)
--
-- M A E S T R O
--
CREATE TABLE MAESTRO(
ID_MAESTRO INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_EMPLEADO INT,
AREA_DOCEN VARCHAR(50),
ID_USU INT
FOREIGN KEY (ID_USU) REFERENCES USUARIO(ID_USU) ON DELETE CASCADE,
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE
)

INSERT INTO MAESTRO VALUES(1, 'Computacion e Informatica', 6),
						  (2, 'Administrador de Base de Datos', 7)
--
-- C A R R E R A
--
CREATE TABLE CARRERA(
ID_CARRERA INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_CARRERA VARCHAR(40)
)

INSERT INTO CARRERA VALUES('Ingeneria Sistemas'),
						  ('Ingeneria Software'),
						  ('Ingeneria Civil'),
						  ('Ingeneria Ambiental'),
						  ('Ingeneria Indusltrial'),
						  ('Derecho'),
						  ('Psicologia'),
						  ('Administracion de Empresas')
--
-- C U R S O S
--
CREATE TABLE CURSOS(
ID_CURSO INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
NOM_CURSO VARCHAR(50),
ID_CARRERA INT
FOREIGN KEY (ID_CARRERA) REFERENCES CARRERA(ID_CARRERA)
)

INSERT INTO CURSOS VALUES('Software Aplicativo',1),
						('Fundamentos de la Programacion',1),
						('Matematica 1',1),
						('Tecnologias Web',1),
						('Base de Datos',1)
--
-- C L A S E S
--
CREATE TABLE CLASE(
ID_CLASE INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_CARRERA INT,
HORA_SEMAN FLOAT
FOREIGN KEY (ID_CARRERA) REFERENCES CARRERA(ID_CARRERA) ON DELETE CASCADE
)

INSERT INTO CLASE VALUES(1, 3),
						(1, 3),
						(1, 3),
						(1, 3),
						(1, 3)
--
-- S E C C I O N
--
CREATE TABLE SECCION(
ID_SECCION INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
COD_SECCION VARCHAR(10),
ID_CLASE INT
FOREIGN KEY (ID_CLASE) REFERENCES CLASE(ID_CLASE)
)

INSERT INTO SECCION VALUES('PDSDS-301', 1),
						  ('PDSDS-302', 1),
						  ('PDSDS-303', 1),
						  ('PDSDS-304', 1),
						  ('PDSDS-305', 1)
-----------------------
-- M A T R I C U L A --
-----------------------
CREATE TABLE MATRICULA(
ID_MATRIC INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_ALUM INT,
PROM_NOTAS FLOAT
FOREIGN KEY(ID_ALUM) REFERENCES ALUMNO(ID_ALUM),
)

INSERT MATRICULA VALUES(1, 14.5),
					   (2, 18.0),
					   (3, 11.5),
					   (4, 17.6),
					   (5, 14.5)
--------------------------------
-- C L A S E S  C R E A D A S --
--------------------------------
CREATE TABLE CLASES_CREADAS(
ID_CCREADAS INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ID_MAESTRO INT,
ID_MATRIC INT,
CICLO CHAR(1),
ID_SECCION INT
FOREIGN KEY(ID_MATRIC)REFERENCES MATRICULA(ID_MATRIC) ON DELETE CASCADE,
FOREIGN KEY(ID_MAESTRO)REFERENCES MAESTRO(ID_MAESTRO) ON DELETE CASCADE,
FOREIGN KEY(ID_SECCION) REFERENCES SECCION(ID_SECCION) ON DELETE CASCADE
)

INSERT INTO CLASES_CREADAS VALUES(1, 1, 'I', 1)
GO
--
-- P R O C E D I M I E N T O S  A L M A C E N A D O S
--
-------------------------
-- Copia de Seguridad --
-------------------------
CREATE PROCEDURE COPIADB
AS
	BACKUP DATABASE MATRICULA TO DISK = 'E:\DB\MAtricual01.BAK'
GO

EXEC COPIADB
GO
--
-- L I S T A D O
--
----------------------
-- Listar Distritos --
----------------------
CREATE PROCEDURE LISTAR_DIS
AS
	SELECT * FROM DISTRITO
GO
--------------------
-- Listar Alumnos --
--------------------
ALTER PROCEDURE LISTAR_ALUM
AS 
	SELECT A.ID_ALUM, A.COD_ALUM, C.NOM_CARRERA, P.NOM_PERSO, P.APE_PERSO, 
	AP.NOM_APODE, AP.PARENTEZCO, P.TELEFONO, P.EMAIL, P.SEXO, P.EST_PERSO 
	FROM ALUMNO A
	INNER JOIN PERSONA P
	ON A.ID_PERSO = P.ID_PERSO
	INNER JOIN CARRERA C
	ON A.ID_CARRERA = C.ID_CARRERA
	INNER JOIN APODERADO AP
	ON A.ID_APODE = AP.ID_APODE
GO

EXEC LISTAR_ALUM
GO
----------------------
-- Listar Empleados --
----------------------
CREATE PROCEDURE LISTAR_EMPLE
AS
	SELECT  E.ID_EMPLEADO AS ID, E.COD_EMPLE AS COD, P.NOM_PERSO AS Nombre, P.APE_PERSO AS APellido, P.DNI AS DNI, P.EMAIL AS Email, P.FECHA_NAC AS Fecha, 
	P.SEXO AS Sexo, P.TELEFONO AS Celular, E.HORAS_TRABAJO AS Horas, E.SUELDO_BASE AS Sueldo, P.EST_PERSO AS Estado
	FROM EMPLEADO E
	INNER JOIN PERSONA P
	ON E.ID_PERSO = P.ID_PERSO
GO

EXEC LISTAR_EMPLE
GO
---------------------
-- Listar Maestros --
---------------------
CREATE PROCEDURE LISTAR_MAEST
AS
	SELECT M.ID_MAESTRO, E.COD_EMPLE, P.NOM_PERSO, P.APE_PERSO, P.SEXO, M.AREA_DOCEN
	FROM MAESTRO M
	INNER JOIN EMPLEADO E
	ON M.ID_EMPLEADO = E.ID_EMPLEADO
	INNER JOIN PERSONA P
	ON E.ID_PERSO = P.ID_PERSO
GO

EXEC LISTAR_MAEST
GO
---------------------------
-- Listar Administrativos--
---------------------------
CREATE PROCEDURE LISTAR_ADMIN
AS
	SELECT A.ID_ADMIN, E.COD_EMPLE, P.NOM_PERSO, P.APE_PERSO, P.SEXO, A.CARGO, A.DEPARTAMENTO
	FROM ADMINISTRATIVO A
	INNER JOIN EMPLEADO E
	ON A.ID_EMPLEADO = E.ID_EMPLEADO
	INNER JOIN PERSONA P
	ON E.ID_PERSO = P.ID_PERSO
GO

EXEC LISTAR_ADMIN
GO
--
-- I N S E R C I O N
--
------------------------------
-- Ultima Persona Ingresada --
------------------------------
CREATE PROCEDURE ULTIMA_PERSO
AS
	SELECT TOP 1 ID_PERSO FROM PERSONA ORDER BY ID_PERSO DESC
GO

EXEC ULTIMA_PERSO
GO
---------------
--
-----------
CREATE PROCEDURE ULTIMA_APODE
AS
	SELECT TOP 1 ID_APODE, NOM_APODE FROM APODERADO ORDER BY ID_APODE DESC
GO

EXEC ULTIMA_APODE
GO
---------------
--
-------------
CREATE PROCEDURE APODE_SIN
AS
	SELECT APO.ID_APODE, APO.NOM_APODE
	FROM ALUMNO A RIGHT JOIN APODERADO APO
	ON APO.ID_APODE = A.ID_APODE
	WHERE A.ID_ALUM IS NULL
	GO
	SELECT * FROM PERSONA
EXEC APODE_SIN
GO
------------------------
-- Ingresar Apoderado --
------------------------
CREATE PROCEDURE ING_APO
	@NOM VARCHAR(40),
	@APE VARCHAR(40),
	@PAREN VARCHAR(25),
	@DNI VARCHAR(8),
	@NAC DATE,
	@TELF VARCHAR(9),
	@EST VARCHAR(25),
	@DIREC VARCHAR(60),
	@SEXO CHAR(1),
	@DISTRI INT
AS
	INSERT INTO APODERADO VALUES(@NOM, @APE, @PAREN, @DNI, @NAC, @TELF, @EST, @DIREC, @SEXO, @DISTRI)
GO

EXEC ING_APO 'Apode1','Apode','Madre','12345678','1998-01-20','995979223','Soltero','AAHH Mateo Pumacahua','F',5
go
-----------------------
-- Ingresar Personas --
-----------------------
CREATE PROCEDURE ING_PER
	@NOM VARCHAR(30),
	@APE VARCHAR(30),
	@TELF VARCHAR(9),
	@DNI VARCHAR(8),
	@EMAIL VARCHAR(40),
	@SEXO CHAR(1),
	@NAC DATE,
	@EST CHAR(1),
	@DIREC VARCHAR(60),
	@IDDIS INT,
	@NIVEL VARCHAR(25)
AS
	INSERT INTO PERSONA VALUES(@NOM, @APE, @TELF, @DNI, @EMAIL, @SEXO, @NAC, @EST, @DIREC, @IDDIS, @NIVEL)
GO

EXEC ING_PER 'Alan','Garcia','995509218','12345678','alan@gmail.com','M','1986-01-20','A','asdasd',1,'Administrativo'
EXEC ING_PER 'Juan','Lee','934626785','12345678','alan@gmail.com','F','1986-01-20','A','asdasd',1,'Maestro'
EXEC ING_PER 'Anthony','Menacho','972101160','12345678','alan@gmail.com','M','1986-01-20','A','asdasd',1,'Alumno'
GO
---------------------
-- Ingresar Alumno --
---------------------
CREATE PROCEDURE INSER_ALUM
@IDAPODE INT,
@IDPERSO INT
AS
	INSERT INTO ALUMNO VALUES(@IDAPODE, NULL, @IDPERSO)
GO

EXEC INSER_ALUM 13,41
GO
----------------------
-- Modificar Alumno --
----------------------
CREATE PROCEDURE MODF_ALUM
	@ID INT,
	@NOM VARCHAR(30),
	@APE VARCHAR(30),
	@TELF VARCHAR(9),
	@DNI VARCHAR(8),
	@EMAIL VARCHAR(40),
	@SEXO CHAR(1),
	@NAC DATE,
	@EST CHAR(1),
	@DIREC VARCHAR(60),
	@IDDIS INT
AS
	UPDATE PERSONA SET NOM_PERSO = @NOM, APE_PERSO = @APE, TELEFONO = @TELF, DNI = @DNI, EMAIL = @EMAIL, SEXO = @SEXO, FECHA_NAC = @NAC, EST_PERSO = @EST, DIRRECION = @DIREC, ID_DIS = @IDDIS WHERE ID_PERSO = @ID
GO

EXEC MODF_ALUM 1,'Modificado1','ApeModificado1','123456789','12345678','corremodificado@gmail.com','M','1998-06-29','A','Mz T Lt 1-A', 3
GO
----------------
-- Ingresar Empleado
-------------
CREATE PROCEDURE INSER_EMP
	@IDPERSO INT,
	@SUELDO FLOAT,
	@HORAS DATETIME
AS 
	INSERT INTO EMPLEADO VALUES(NULL, @IDPERSO, @SUELDO, @HORAS)
GO

EXEC INSER_EMP 9,1250,'08:00:00'
EXEC INSER_EMP 10,1500,'04:00:00'
GO
----------------------
-- Ingresar Maestro --
----------------------
CREATE PROCEDURE INSER_MAES
	@IDEMPLE INT,
	@AREDOC VARCHAR(30),
	@IDUSU INT
AS
	SELECT * FROM PERSONA
	INSERT INTO MAESTRO VALUES(@IDEMPLE, @AREDOC, @IDUSU)
GO

INSERT INTO USUARIO values ('Java','123','admin')

EXEC INSER_MAES 3, 'Programador C# ', 9
GO
-----------------------------
-- Insertar Administrativo --
-----------------------------
CREATE PROCEDURE INSER_ADMINIS
	@IDEMP INT,
	@CARGO VARCHAR(20),
	@DEPAR VARCHAR(50),
	@IDUSU INT
AS
	INSERT INTO ADMINISTRATIVO VALUES(@IDEMP, @CARGO, @DEPAR, @IDUSU)
GO

INSERT INTO USUARIO VALUES ('director','123','admin')

EXEC INSER_ADMINIS 9,'Director','Administrativo', 10
GO
------------------
--
--------------
ALTER PROCEDURE BUSCAR_ALUM
@COD VARCHAR(15)
AS
	SELECT P.ID_PERSO, A.ID_ALUM, A.COD_ALUM, P.NOM_PERSO, C.NOM_CARRERA, P.APE_PERSO, P.DNI, P.FECHA_NAC,
	AP.NOM_APODE, AP.PARENTEZCO, P.TELEFONO, P.EMAIL, P.SEXO, P.DIRRECION, D.NOM_DIS, EST_PERSO 
	FROM ALUMNO A
	INNER JOIN PERSONA P
	ON A.ID_PERSO = P.ID_PERSO
	INNER JOIN CARRERA C
	ON A.ID_CARRERA = C.ID_CARRERA
	INNER JOIN CURSOS CU
	ON C.ID_CARRERA = CU.ID_CARRERA
	INNER JOIN APODERADO AP
	ON A.ID_APODE = AP.ID_APODE
	INNER JOIN DISTRITO D
	ON D.ID_DIS = P.ID_DIS
	WHERE A.COD_ALUM = @COD
GO

EXEC BUSCAR_ALUM 'BTORRESM98'
GO
-----------------
-- Listar Cursos
-------------
CREATE PROCEDURE LISTAR_CURSOS
@COD VARCHAR(20)
AS
	SELECT CU.NOM_CURSO
	FROM ALUMNO A
	INNER JOIN CARRERA CA
	ON A.ID_CARRERA = CA.ID_CARRERA
	INNER JOIN CURSOS CU
	ON CA.ID_CARRERA = CU.ID_CARRERA
	WHERE A.COD_ALUM = @COD
GO

---------------
--Buscar
-----------------
CREATE PROCEDURE BUSCAR_ALUMD
	@num int,
	@COD VARCHAR(15),
	@APE VARCHAR(15)
AS
	DECLARE @CONSULTA VARCHAR(800)
	SET @CONSULTA = 'SELECT A.ID_ALUM, A.COD_ALUM, P.NOM_PERSO, P.APE_PERSO, P.DNI, P.FECHA_NAC,
					AP.NOM_APODE, AP.PARENTEZCO, P.TELEFONO, P.EMAIL, P.SEXO, P.DIRRECION, D.NOM_DIS, EST_PERSO
					FROM ALUMNO A
					INNER JOIN PERSONA P
					ON A.ID_PERSO = P.ID_PERSO
					INNER JOIN APODERADO AP
					ON A.ID_APODE = AP.ID_APODE
					INNER JOIN DISTRITO D
					ON D.ID_DIS = P.ID_DIS 
					INNER JOIN MATRICULA M
					ON A.ID_ALUM = M.ID_ALUM 
					WHERE '
	IF @APE = '' AND @COD = ''
		EXEC LISTAR_ALUM
	ELSE
		BEGIN
			IF @num = 1
				SET @CONSULTA = @CONSULTA + ' A.COD_ALUM LIKE ' + CHAR(39) + @COD + '%' + CHAR(39)
			ELSE
				SET @CONSULTA = @CONSULTA + ' P.APE_PERSO LIKE ' + CHAR(39) + @APE + '%' + CHAR(39)
			EXEC (@CONSULTA)
		END
GO

----------------
--
--------------
CREATE PROCEDURE LISTAR_SEC
AS
	SELECT ID_SECCION, COD_SECCION FROM SECCION
GO

EXEC LISTAR_SEC
GO
-- 
-- T R I G G E R S
--
--------------------------------------------------
-- Trigger para auto generar Codigo de empleado --
--------------------------------------------------
CREATE TRIGGER TR_CODEMP
ON EMPLEADO FOR INSERT
AS
	DECLARE @NOM CHAR(1), @APE CHAR(1), @FECHA CHAR(2), @ID INT
	SELECT  @ID = ID_PERSO, @NOM = LEFT(NOM_PERSO, 1),  @APE = LEFT(APE_PERSO,1),  @FECHA = RIGHT(YEAR(FECHA_NAC),2) FROM PERSONA
	UPDATE EMPLEADO SET COD_EMPLE = UPPER(CONCAT(@NOM,@APE,@FECHA)) WHERE EMPLEADO.ID_PERSO = @ID
GO
--------------------------------------------
-- Trigger para insertar Codigo de Alumno --
--------------------------------------------
CREATE TRIGGER TR_CODALUM
ON ALUMNO FOR INSERT
AS
	DECLARE @NOM CHAR(1), @APE VARCHAR(25), @FECHA CHAR(2), @ID INT, @SELEC VARCHAR(300)
	SET @SELEC = (SELECT TOP 1 ID_PERSO FROM PERSONA ORDER BY ID_PERSO DESC)
	SELECT @ID = ID_PERSO, @NOM = LEFT(NOM_PERSO, 1),  @APE = APE_PERSO,  @FECHA = RIGHT(YEAR(FECHA_NAC),2) FROM PERSONA WHERE ID_PERSO = @SELEC
	print @id
	UPDATE ALUMNO SET COD_ALUM = UPPER(CONCAT(@NOM,@APE,@FECHA)) WHERE ALUMNO.ID_PERSO = @ID
GO